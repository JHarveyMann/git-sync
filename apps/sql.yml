version: 43.0.9
pageUuid: baa1c61e-f5a7-11ed-9a31-5fcc4393e827
appTemplate:
  plugins:
    ordered:
      - getMigrations:
          pluginTemplate:
            id: getMigrations
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - workflowParams: null
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: select * from "SequelizeMeta" ORDER BY name
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - workflowRunBodyType: raw
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - requestSentTimestamp: null
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - queryRunTime: null
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10001'
                - workflowId: null
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-05-18T18:13:45.765Z
      - deleteMigration:
          pluginTemplate:
            id: deleteMigration
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - workflowParams: null
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: >-
                    DELETE FROM "SequelizeMeta" WHERE name =
                    '20230412000000-add-provider-to-retooldb-provision.js';
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - workflowRunBodyType: raw
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - requestSentTimestamp: null
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - queryRunTime: null
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10001'
                - workflowId: null
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-05-18T18:27:23.209Z
      - addMigration:
          pluginTemplate:
            id: addMigration
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - workflowParams: null
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: >-
                    INSERT INTO "SequelizeMeta" (name) VALUES
                    ('20230412000000-add-provider-to-retooldb-provision.js')
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - workflowRunBodyType: raw
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - requestSentTimestamp: null
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - queryRunTime: null
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10001'
                - workflowId: null
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-05-18T18:27:34.987Z
      - query4:
          pluginTemplate:
            id: query4
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - workflowParams: null
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: >-
                    select p.name, p."createdAt", ps."createdAt" ps_created,
                    ps.data, t.name tag_name, t.description

                    from pages p 

                    left join page_saves ps On ps."pageId" = p.id

                    left join tags t On p."releasedTagId" = t.id

                    WHERE p.name = 'release issue'
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - workflowRunBodyType: raw
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - requestSentTimestamp: null
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - queryRunTime: null
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10000'
                - workflowId: null
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-06-01T15:28:52.814Z
      - query5:
          pluginTemplate:
            id: query5
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - workflowParams: null
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: >-
                    select p.name app, t."pageSaveId", t.name release_id,
                    t.description, ps."createdAt", ps.data, ps."changesRecord"

                    from tags t 

                    left join pages p on t."pageId" = p.id

                    left join page_saves ps ON t."pageSaveId" = ps.id
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - workflowRunBodyType: raw
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - requestSentTimestamp: null
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - queryRunTime: null
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10000'
                - workflowId: null
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-06-01T15:30:29.060Z
      - query6:
          pluginTemplate:
            id: query6
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: insert into test (name) values ('jmann');
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '120000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-06-06T12:36:32.933Z
      - selectTest:
          pluginTemplate:
            id: selectTest
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: select * from test;
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '120000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-06-06T12:39:44.713Z
  queryStatusVisibility: false
  experimentalPerfFeatures:
    object:
      serverDepGraphEnabled: false
      useRuntimeV2: false
      runtimeV2OptOut: false
  rootScreen: null
  version: 2.121.1
  markdownLinkBehavior: auto
  experimentalDataTabEnabled: true
