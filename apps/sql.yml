version: 43.0.9
pageUuid: baa1c61e-f5a7-11ed-9a31-5fcc4393e827
appTemplate:
  plugins:
    ordered:
      - get:
          pluginTemplate:
            id: get
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - workflowParams: null
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: select * from "SequelizeMeta" ORDER BY name
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - requestSentTimestamp: null
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - queryRunTime: null
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10001'
                - workflowId: null
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-05-18T18:13:45.765Z
      - deleteMigration:
          pluginTemplate:
            id: deleteMigration
            type: datasource
            subtype: SqlQueryUnified
            resourceName: 3cbf0380-1d18-4d31-abea-0a9e0fc1d657
            resourceDisplayName: retool postgres
            template:
              ordered:
                - queryRefreshTime: ''
                - records: ''
                - lastReceivedFromResourceAt: null
                - databasePasswordOverride: ''
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - workflowParams: null
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: select * from "SequelizeMeta" ORDER BY name
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - warningCodes: []
                - data: null
                - recordId: ''
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - dataArray: []
                - cacheKeyTtl: ''
                - filterBy: ''
                - requestSentTimestamp: null
                - databaseHostOverride: ''
                - metadata: null
                - editorMode: sql
                - queryRunTime: null
                - actionType: ''
                - changesetObject: ''
                - shouldUseLegacySql: false
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - databaseNameOverride: ''
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - enableBulkUpdates: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - bulkUpdatePrimaryKey: ''
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - tableName: ''
                - queryTimeout: '10001'
                - workflowId: null
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - databaseUsernameOverride: ''
                - shouldEnableBatchQuerying: false
                - doNotThrowOnNoOp: false
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-05-18T18:27:23.209Z
  queryStatusVisibility: false
  experimentalPerfFeatures:
    object:
      serverDepGraphEnabled: false
      useRuntimeV2: false
      runtimeV2OptOut: false
  rootScreen: null
  version: 2.117.5
  markdownLinkBehavior: auto
  experimentalDataTabEnabled: true
