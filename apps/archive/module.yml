version: 43.0.9
pageUuid: 464cf7d6-c42c-11ed-a986-e74b0b7e7e3a
appTemplate:
  plugins:
    ordered:
      - $main:
          pluginTemplate:
            id: $main
            type: frame
            subtype: Frame
            template:
              ordered:
                - type: main
                - sticky: false
                - isHiddenOnDesktop: false
                - isHiddenOnMobile: false
            style:
              ordered: []
            createdAt: 2023-03-16T18:56:48.795Z
      - check:
          pluginTemplate:
            id: check
            type: datasource
            subtype: JavascriptQuery
            resourceName: JavascriptQuery
            template:
              ordered:
                - queryRefreshTime: ''
                - lastReceivedFromResourceAt: null
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - showFailureToaster: true
                - query: |-
                    let { username, password } = JSON.parse(login.data.data)
                    if (username == "jmann" && password == "hello") {
                      status1.setValue("logged_in")
                    }
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - requestSentTimestamp: null
                - metadata: null
                - queryRunTime: null
                - changesetObject: ''
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: null
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return data
                - events: []
                - queryTimeout: '10000'
                - requireConfirmation: false
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-03-16T18:57:13.208Z
      - login:
          pluginTemplate:
            id: login
            type: datasource
            subtype: RESTQuery
            resourceName: REST-WithoutResource
            template:
              ordered:
                - queryRefreshTime: ''
                - paginationLimit: ''
                - body: >-
                    [{"key":"username","value":"{{ username.value
                    }}"},{"key":"password","value":"{{ password.value }}"}]
                - lastReceivedFromResourceAt: null
                - queryDisabledMessage: ''
                - servedFromCache: false
                - offlineUserQueryInputs: ''
                - successMessage: ''
                - queryDisabled: ''
                - playgroundQuerySaveId: latest
                - resourceNameOverride: ''
                - runWhenModelUpdates: false
                - paginationPaginationField: ''
                - headers: ''
                - showFailureToaster: true
                - paginationEnabled: false
                - query: https://httpbin.org/post
                - playgroundQueryUuid: ''
                - playgroundQueryId: null
                - error: null
                - privateParams: []
                - runWhenPageLoadsDelay: ''
                - data: null
                - importedQueryInputs:
                    ordered: []
                - isImported: false
                - showSuccessToaster: true
                - cacheKeyTtl: ''
                - requestSentTimestamp: null
                - cookies: ''
                - metadata: null
                - queryRunTime: null
                - changesetObject: ''
                - errorTransformer: >-
                    // The variable 'data' allows you to reference the request's
                    data in the transformer. 

                    // example: return data.find(element => element.isError)

                    return data.error
                - finished: null
                - confirmationMessage: null
                - isFetching: false
                - changeset: ''
                - rawData: null
                - queryTriggerDelay: '0'
                - resourceTypeOverride: ''
                - watchedParams: []
                - enableErrorTransformer: false
                - showLatestVersionUpdatedWarning: false
                - paginationDataField: ''
                - timestamp: 0
                - importedQueryDefaults:
                    ordered: []
                - enableTransformer: false
                - showUpdateSetValueDynamicallyToggle: true
                - runWhenPageLoads: false
                - transformer: >-
                    // type your code here

                    // example: return formatDataAsArray(data).filter(row =>
                    row.quantity > 20)

                    return JSON.parse(data);
                - events:
                    - ordered:
                        - event: success
                        - type: datasource
                        - method: trigger
                        - pluginId: check
                        - targetId: null
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - queryTimeout: '10000'
                - requireConfirmation: false
                - type: POST
                - queryFailureConditions: ''
                - changesetIsObject: false
                - enableCaching: false
                - allowedGroups: []
                - bodyType: json
                - offlineQueryType: None
                - queryThrottleTime: '750'
                - updateSetValueDynamically: false
                - notificationDuration: ''
            createdAt: 2023-03-16T19:01:24.429Z
      - moduleContainer:
          pluginTemplate:
            id: moduleContainer
            type: widget
            subtype: ModuleContainerWidget
            template:
              ordered:
                - heightType: fixed
                - spinWhenChildrenAreFetching: true
                - showBorder: true
                - showDropShadow: true
                - isGlobalWidgetContainer: true
                - backgroundColor: white
                - title: ''
                - overflowType: hidden
                - disabled: ''
            position2:
              position2:
                height: 12
                width: 12
            mobilePosition2:
              position2:
                height: 12
                width: 12
            createdAt: 2023-03-16T18:56:35.527Z
      - password:
          pluginTemplate:
            id: password
            type: widget
            subtype: PasswordInputWidget
            template:
              ordered:
                - readOnly: false
                - maxLength: null
                - hidden: false
                - customValidation: ''
                - hideValidationMessage: false
                - textBefore: ''
                - validationMessage: ''
                - showInEditor: false
                - showClear: false
                - pattern: ''
                - tooltipText: ''
                - labelAlign: left
                - formDataKey: '{{ self.id }}'
                - value: ''
                - labelCaption: ''
                - hideLabel: true
                - labelWidth: '33'
                - autoFill: current-password
                - placeholder: ••••••••••
                - label: Password
                - _validate: false
                - labelWidthUnit: '%'
                - invalid: false
                - iconBefore: ''
                - minLength: null
                - inputTooltip: ''
                - events:
                    - ordered:
                        - event: submit
                        - type: datasource
                        - method: trigger
                        - pluginId: login
                        - targetId: null
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - loading: false
                - disabled: false
                - labelPosition: left
                - labelWrap: false
                - showTextToggle: true
                - maintainSpaceWhenHidden: false
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: moduleContainer
                row: 1
                height: 1
                width: 12
            createdAt: 2023-03-16T18:57:02.343Z
      - status1:
          pluginTemplate:
            id: status1
            type: widget
            subtype: StatusWidget
            template:
              ordered:
                - heightType: auto
                - horizontalAlign: left
                - _values:
                    - logged_in
                    - canceled
                - fallbackTooltip: ''
                - iconByIndex:
                    array: []
                - iconPosition: left
                - values:
                    array: []
                - _iconByIndex:
                    - bold/interface-validation-check-circle
                    - bold/interface-delete-circle
                - hidden: false
                - data:
                    array: []
                - selectedItem: null
                - showInEditor: false
                - verticalAlign: top
                - value: canceled
                - _hasMigratedNestedItems: true
                - itemMode: static
                - selectedIndex: null
                - _tooltipByIndex:
                    - ''
                    - ''
                - _colorByIndex:
                    - '{{ theme.success }}'
                    - '{{ theme.danger }}'
                - tooltipByIndex:
                    array: []
                - colorByIndex:
                    array: []
                - selectedLabel: ''
                - _ids:
                    - a0e8b
                    - '96e45'
                - _labels:
                    - Logged In!
                    - Not Logged In
                - maintainSpaceWhenHidden: false
                - labels:
                    array: []
            style:
              ordered: []
            position2:
              position2:
                container: moduleContainer
                row: 2
                col: 2
                height: 0.6
                width: 2
            createdAt: 2023-03-16T18:58:21.026Z
      - username:
          pluginTemplate:
            id: username
            type: widget
            subtype: TextInputWidget2
            template:
              ordered:
                - spellCheck: false
                - readOnly: false
                - iconAfter: ''
                - showCharacterCount: false
                - autoComplete: false
                - maxLength: null
                - hidden: false
                - customValidation: ''
                - patternType: ''
                - hideValidationMessage: false
                - textBefore: ''
                - validationMessage: ''
                - textAfter: ''
                - showInEditor: false
                - showClear: false
                - pattern: ''
                - tooltipText: ''
                - labelAlign: left
                - formDataKey: '{{ self.id }}'
                - value: ''
                - labelCaption: ''
                - hideLabel: true
                - labelWidth: '33'
                - autoFill: ''
                - placeholder: Enter value
                - label: Label
                - _validate: false
                - labelWidthUnit: '%'
                - invalid: false
                - iconBefore: ''
                - minLength: null
                - inputTooltip: ''
                - events:
                    - ordered:
                        - event: submit
                        - type: datasource
                        - method: trigger
                        - pluginId: login
                        - targetId: null
                        - params:
                            ordered: []
                        - waitType: debounce
                        - waitMs: '0'
                - autoCapitalize: none
                - loading: false
                - disabled: false
                - labelPosition: left
                - labelWrap: false
                - maintainSpaceWhenHidden: false
                - required: false
            style:
              ordered: []
            position2:
              position2:
                container: moduleContainer
                height: 1
                width: 12
            createdAt: 2023-03-16T18:56:48.767Z
  queryStatusVisibility: false
  experimentalPerfFeatures:
    object:
      serverDepGraphEnabled: false
      useRuntimeV2: false
      runtimeV2OptOut: false
  rootScreen: null
  isGlobalWidget: true
  version: 2.111.3
  markdownLinkBehavior: auto
